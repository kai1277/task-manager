// ÈÄöÁü•Ë®≠ÂÆö„É¢„Éº„ÉÄ„É´„ÅÆÁÆ°ÁêÜ
class NotificationSettingsManager {
  constructor() {
    this.loadSettings();
    this.updatePermissionStatus();
  }

  // Ë®≠ÂÆö„É¢„Éº„ÉÄ„É´„ÇíÈñã„Åè
  open() {
    document
      .getElementById("notificationSettingsModal")
      .classList.add("active");
    document.body.style.overflow = "hidden";
    this.loadSettingsToForm();
    this.updatePermissionStatus();
  }

  // Ë®≠ÂÆö„É¢„Éº„ÉÄ„É´„ÇíÈñâ„Åò„Çã
  close() {
    document
      .getElementById("notificationSettingsModal")
      .classList.remove("active");
    document.body.style.overflow = "";
  }

  // ÁèæÂú®„ÅÆË®≠ÂÆö„Çí„Éï„Ç©„Éº„É†„Å´Ë™≠„ÅøËæº„Åø
  loadSettingsToForm() {
    const settings = this.getCurrentSettings();

    document.getElementById("taskReminderEnabled").checked =
      settings.taskReminder !== false;
    document.getElementById("taskReminderMinutes").value =
      settings.reminderMinutes || 30;
    document.getElementById("scheduleReminderEnabled").checked =
      settings.scheduleReminder !== false;
    document.getElementById("scheduleReminderMinutes").value =
      settings.scheduleReminderMinutes || settings.reminderMinutes || 30;
    document.getElementById("dailyReminderEnabled").checked =
      settings.dailyReminder !== false;
    document.getElementById("dailyReminderTime").value =
      settings.dailyReminderTime || "09:00";
    document.getElementById("overdueReminderEnabled").checked =
      settings.overdueReminder !== false;
    document.getElementById("soundEnabled").checked =
      settings.soundEnabled !== false;
    document.getElementById("persistentNotification").checked =
      settings.persistentNotification === true;
    document.getElementById("checkInterval").value =
      settings.checkInterval || 60000;
  }

  // „Éï„Ç©„Éº„É†„Åã„ÇâË®≠ÂÆö„ÇíÂèñÂæó
  getSettingsFromForm() {
    return {
      taskReminder: document.getElementById("taskReminderEnabled").checked,
      reminderMinutes: parseInt(
        document.getElementById("taskReminderMinutes").value
      ),
      scheduleReminder: document.getElementById("scheduleReminderEnabled")
        .checked,
      scheduleReminderMinutes: parseInt(
        document.getElementById("scheduleReminderMinutes").value
      ),
      dailyReminder: document.getElementById("dailyReminderEnabled").checked,
      dailyReminderTime: document.getElementById("dailyReminderTime").value,
      overdueReminder: document.getElementById("overdueReminderEnabled")
        .checked,
      soundEnabled: document.getElementById("soundEnabled").checked,
      persistentNotification: document.getElementById("persistentNotification")
        .checked,
      checkInterval: parseInt(document.getElementById("checkInterval").value),
    };
  }

  // ÁèæÂú®„ÅÆË®≠ÂÆö„ÇíÂèñÂæó
  getCurrentSettings() {
    if (window.taskNotificationManager) {
      return window.taskNotificationManager.getSettings();
    }

    return JSON.parse(localStorage.getItem("notificationSettings") || "{}");
  }

  // Ë®≠ÂÆö„Çí‰øùÂ≠òÔºà„Çµ„Éº„Éê„ÉºAPI„Çí‰Ωø„Çè„Å™„ÅÑ„Éê„Éº„Ç∏„Éß„É≥Ôºâ
  async saveSettings() {
    const settings = this.getSettingsFromForm();

    try {
      // „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Å´‰øùÂ≠ò
      localStorage.setItem("notificationSettings", JSON.stringify(settings));

      // ÈÄöÁü•„Éû„Éç„Éº„Ç∏„É£„Éº„Å´Ë®≠ÂÆö„ÇíÂèçÊò†
      if (window.taskNotificationManager) {
        window.taskNotificationManager.updateSettings(settings);
      }

      this.showSuccessMessage("ÈÄöÁü•Ë®≠ÂÆö„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Åü");
      this.close();
    } catch (error) {
      console.error("Ë®≠ÂÆö‰øùÂ≠ò„Ç®„É©„Éº:", error);
      this.showErrorMessage("Ë®≠ÂÆö„ÅÆ‰øùÂ≠ò„Å´Â§±Êïó„Åó„Åæ„Åó„Åü");
    }
  }

  // „Çµ„Éº„Éê„Éº„Å´Ë®≠ÂÆö„Çí‰øùÂ≠òÔºà„Ç™„Éó„Ç∑„Éß„É≥ - API„ÅåÂÆüË£Ö„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅÆ„ÅøÔºâ
  async saveSettingsToServer(settings) {
    // API„ÅåÂÆüË£Ö„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØ„Çπ„Ç≠„ÉÉ„Éó
    try {
      const response = await fetch(
        "/task-manager/public/api/notifications/settings",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(settings),
        }
      );

      if (!response.ok) {
        console.log("„Çµ„Éº„Éê„Éº‰øùÂ≠ò„ÅØ„Çπ„Ç≠„ÉÉ„ÉóÔºàAPI„ÅåÊú™ÂÆüË£ÖÔºâ");
        return { success: true }; // „Ç®„É©„Éº„Å®„Åõ„Åö„Å´Á∂öË°å
      }

      return await response.json();
    } catch (error) {
      console.log("„Çµ„Éº„Éê„Éº‰øùÂ≠ò„ÅØ„Çπ„Ç≠„ÉÉ„ÉóÔºàAPI„ÅåÊú™ÂÆüË£ÖÔºâ");
      return { success: true }; // „Ç®„É©„Éº„Å®„Åõ„Åö„Å´Á∂öË°å
    }
  }

  // Ë®≠ÂÆö„ÇíË™≠„ÅøËæº„ÅøÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
  async loadSettings() {
    try {
      const response = await fetch(
        "/task-manager/public/api/notifications/settings"
      );
      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          localStorage.setItem(
            "notificationSettings",
            JSON.stringify(data.settings)
          );
        }
      }
    } catch (error) {
      console.log("„Çµ„Éº„Éê„ÉºË®≠ÂÆöË™≠„ÅøËæº„Åø„ÅØ„Çπ„Ç≠„ÉÉ„ÉóÔºàAPI„ÅåÊú™ÂÆüË£ÖÔºâ");
      // „Ç®„É©„Éº„Å®„Åó„Å™„ÅÑ - „É≠„Éº„Ç´„É´Ë®≠ÂÆö„Çí‰ΩøÁî®
    }
  }

  // ÈÄöÁü•Ë®±ÂèØÁä∂Ê≥Å„ÇíÊõ¥Êñ∞
  updatePermissionStatus() {
    const statusElement = document.getElementById("notificationStatus");
    const enableBtn = document.getElementById("enableNotificationBtn");

    if (!statusElement || !enableBtn) return;

    if (!("Notification" in window)) {
      statusElement.textContent = "„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì";
      statusElement.className = "status-value disabled";
      enableBtn.style.display = "none";
      return;
    }

    switch (Notification.permission) {
      case "granted":
        statusElement.textContent = "ÊúâÂäπ";
        statusElement.className = "status-value enabled";
        enableBtn.style.display = "none";
        break;
      case "denied":
        statusElement.textContent = "ÊãíÂê¶„Åï„Çå„Å¶„ÅÑ„Åæ„Åô";
        statusElement.className = "status-value denied";
        enableBtn.style.display = "none";
        break;
      default:
        statusElement.textContent = "Êú™Ë®≠ÂÆö";
        statusElement.className = "status-value disabled";
        enableBtn.style.display = "inline-block";
    }
  }

  // ÈÄöÁü•„ÇíÊúâÂäπ„Å´„Åô„Çã
  async enableNotifications() {
    try {
      const permission = await Notification.requestPermission();
      this.updatePermissionStatus();

      if (permission === "granted") {
        this.showSuccessMessage("ÈÄöÁü•„ÅåÊúâÂäπ„Å´„Å™„Çä„Åæ„Åó„Åü");

        if (window.taskNotificationManager) {
          window.taskNotificationManager.notificationPermission = true;
          window.taskNotificationManager.showWelcomeNotification();
        }
      } else {
        this.showErrorMessage(
          "ÈÄöÁü•„ÅåÊãíÂê¶„Åï„Çå„Åæ„Åó„Åü„ÄÇ„Éñ„É©„Ç¶„Ç∂„ÅÆË®≠ÂÆö„Åã„ÇâÊâãÂãï„ÅßÊúâÂäπ„Å´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"
        );
      }
    } catch (error) {
      console.error("ÈÄöÁü•Ë®±ÂèØ„Ç®„É©„Éº:", error);
      this.showErrorMessage("ÈÄöÁü•„ÅÆÊúâÂäπÂåñ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü");
    }
  }

  // „ÉÜ„Çπ„ÉàÈÄöÁü•
  testNotification() {
    if (window.taskNotificationManager) {
      window.taskNotificationManager.testNotification();
    } else {
      if (Notification.permission === "granted") {
        new Notification("üîî „ÉÜ„Çπ„ÉàÈÄöÁü•", {
          body: "ÈÄöÁü•Ê©üËÉΩ„ÅåÊ≠£Â∏∏„Å´Âãï‰Ωú„Åó„Å¶„ÅÑ„Åæ„Åô",
          // icon: "/task-manager/public/assets/img/icon-192.png", // ‰∏ÄÊôÇÁöÑ„Å´„Ç≥„É°„É≥„Éà„Ç¢„Ç¶„Éà
        });
      } else {
        alert("ÈÄöÁü•„ÅåÊúâÂäπ„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Åæ„ÅöÈÄöÁü•„ÇíÊúâÂäπ„Å´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ");
      }
    }
  }

  // „É°„ÉÉ„Çª„Éº„Ç∏Ë°®Á§∫
  showMessage(message, type) {
    const messageDiv = document.createElement("div");
    messageDiv.className = `flash-message ${type}-message`;
    messageDiv.textContent = message;
    messageDiv.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 10001;
            cursor: pointer;
            max-width: 300px;
            animation: slideInDown 0.3s ease;
        `;

    document.body.appendChild(messageDiv);

    setTimeout(() => {
      if (messageDiv.parentNode) {
        messageDiv.style.animation = "fadeOut 0.3s ease forwards";
        setTimeout(() => {
          if (messageDiv.parentNode) {
            messageDiv.parentNode.removeChild(messageDiv);
          }
        }, 300);
      }
    }, 3000);

    messageDiv.onclick = () => {
      if (messageDiv.parentNode) {
        messageDiv.style.animation = "fadeOut 0.3s ease forwards";
        setTimeout(() => {
          if (messageDiv.parentNode) {
            messageDiv.parentNode.removeChild(messageDiv);
          }
        }, 300);
      }
    };
  }

  showSuccessMessage(message) {
    this.showMessage(message, "success");
  }

  showErrorMessage(message) {
    this.showMessage(message, "error");
  }
}

// „Ç∞„É≠„Éº„Éê„É´„Ç§„É≥„Çπ„Çø„É≥„Çπ
let notificationSettingsManager;

// „Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞
function openNotificationSettings() {
  if (!notificationSettingsManager) {
    notificationSettingsManager = new NotificationSettingsManager();
  }
  notificationSettingsManager.open();
}

function closeNotificationSettings() {
  if (notificationSettingsManager) {
    notificationSettingsManager.close();
  }
}

function saveNotificationSettings() {
  if (notificationSettingsManager) {
    notificationSettingsManager.saveSettings();
  }
}

function enableNotifications() {
  if (notificationSettingsManager) {
    notificationSettingsManager.enableNotifications();
  }
}

function testNotification() {
  if (notificationSettingsManager) {
    notificationSettingsManager.testNotification();
  }
}

// ÂàùÊúüÂåñ
document.addEventListener("DOMContentLoaded", function () {
  document.addEventListener("keydown", function (e) {
    if (e.key === "Escape") {
      closeNotificationSettings();
    }
  });

  const modal = document.getElementById("notificationSettingsModal");
  if (modal) {
    modal.addEventListener("click", function (e) {
      if (e.target === this) {
        closeNotificationSettings();
      }
    });
  }
});
